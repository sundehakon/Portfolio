{
    "home": "Home",
    "contactheader": "Contact",
    "bio": "16 year old student developer from Oslo, Norway",
    "contact": "Contact Me",
    "skillset": "Skillset",
    "about": "About",
    "development": "Development",
    "developmentbio": "As most developers, I am fond of using various operating systems for project development. Currently, I use a MacBook Pro and Visual Studio Code for most of my work. I also have experience with Linux and Windows.",
    "myhistory": "My History",
    "myhistorybio": "I was born on November 16, 2007, in Oslo, Norway. I've lived in Lillestr√∏m most of my life, a medium-sized city just outside Oslo. I started programming a few years ago, influenced by school and social media. Now, I code every day for school!",
    "projects": "Projects",
    "projectsbio": "Building projects is one of my favorite ways to learn to code. Over the years, I've created weather applications using APIs, a hotel webpage, and a console-based application for generating AI-based images using Stability AI. Check out my projects!",
    "sundeweatherbio": "Website created using React which utilizes APIs from Yr and OpenCage to bring weather data for the user based on a search query. The website also offers an interactive map solution where the user can input their location on the map, or use their own and receive the weather data for that location almost immediately.",
    "keyfeatures": "Key features:",
    "sundeweatherkeyfeature1": "Real-time weather updates based on user queries",
    "sundeweatherkeyfeature2": "Interactive map for location-based weather information",
    "sundeweatherkeyfeature3": "Responsive design for optimal viewing on all devices",
    "sundeweatherkeyfeature4": "Accurate geocoding using OpenCage API",
    "website": "Website",
    "todoclibio": "A simple CLI todo list application. The application allows the user to add, remove, and list tasks. The tasks are stored in a JSON file, and the application is built using the Rust programming language. The program also has a motivational feature which fetches a random quote to help the user on it's journey to finish their daily chores.",
    "todoclikeyfeature1": "Add, remove, and list tasks",
    "todoclikeyfeature2": "JSON file storage for tasks",
    "todoclikeyfeature3": "Motivational quotes for the user",
    "sundeaibio": "Console based application for generating AI images based on a text search query by the user. The project uses a Stability AI API, and their engine to generate, but handles UI and the request sent to the generator.",
    "sundeaikeyfeature1": "API fetch from state of the art AI image engine",
    "sundeaikeyfeature2": "UCustomizable fetch queries for the user",
    "sundeaikeyfeature3": "Quick generating speeds",
    "rubyceasarbio": "One of my first Ruby projects. It's a console based application which works as a mini app where you can add a string which is then encrypted using the caesar cipher. From the built in menu you can see the encrypted message, or view the decrypted message that you just wrote in. It is not intended to store passwords and such just a fun application where the user can see the encryption for themselves.",
    "rubyceasarkeyfeature1": "Caesar cipher encryption",
    "rubyceasarkeyfeature2": "User input for custom strings",
    "rubyceasarkeyfeature3": "Decryption of the encrypted string",
    "havblikkbio": "Website created for a fictional hotel in Norway. The website provides functionality for both the staff at the hotel and visitors. Users can rent rooms, and staff can check incoming reservations. This project was created because of a school project, using React and Material UI for a sleek and modern design.",
    "havblikkkeyfeature1": "Room reservations and overview of orders",
    "havblikkkeyfeature2": "Modern design which showcases the fictional hotel",
    "havblikkkeyfeature3": "3D model of hotel room",
    "havblikkkeyfeature4": "User authentication with Auth0",
    "catchtheballbio": "Small minigame which was created as a math class project. It uses Pygame with Python to create a simple game where the player has to catch the ball with a paddle. The game has a scoring system and a high score system, and the player can play until they lose by reaching a minimum, or win if they hit the maximum.",
    "catchtheballkeyfeature1": "Point system with win and lose screens",
    "catchtheballkeyfeature2": "Engaging backgroud and UI",
    "catchtheballkeyfeature3": "Easily understandable controls",
    "emailtitle": "Send me an E-Mail!",
    "name": "Name",
    "email": "Email",
    "message": "Message",
    "send": "Send",
    "authtitle": "Authentication",
    "authdescription": "Some of my projects use authentication to provide a more personalized experience. You can log in here to access more features and content.",
    "login": "Log In",
    "logout": "Log Out"
}