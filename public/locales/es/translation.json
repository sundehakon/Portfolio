{
    "bio": "Estudiante desarrollador de 16 años de Oslo, Noruega",
    "contact": "Contáctame",
    "skillset": "Habilidades",
    "about": "Sobre mí",
    "development": "Desarrollo",
    "developmentbio": "Como la mayoría de los desarrolladores, me gusta usar varios sistemas operativos para el desarrollo de proyectos. Actualmente, uso un MacBook Pro y Visual Studio Code para la mayor parte de mi trabajo. También tengo experiencia con Linux y Windows.",
    "myhistory": "Mi Historia",
    "myhistorybio": "Nací el 16 de noviembre de 2007 en Oslo, Noruega. He vivido en Lillestrøm la mayor parte de mi vida, una ciudad de tamaño mediano justo afuera de Oslo. Empecé a programar hace unos años, influenciado por la escuela y las redes sociales. ¡Ahora codifico todos los días para la escuela!",
    "projects": "Proyectos",
    "projectsbio": "Construir proyectos es una de mis formas favoritas de aprender a programar. A lo largo de los años, he creado aplicaciones meteorológicas usando APIs, una página web de un hotel y una aplicación basada en consola para generar imágenes basadas en IA usando Stability AI. ¡Mira mis proyectos!",
    "sundeweatherbio": "Sitio web creado con React que utiliza APIs de Yr y OpenCage para proporcionar datos meteorológicos para el usuario según una consulta de búsqueda. El sitio web también ofrece una solución de mapa interactivo donde el usuario puede ingresar su ubicación en el mapa, o usar la suya propia y recibir los datos meteorológicos para esa ubicación casi de inmediato.",
    "keyfeatures": "Características clave:",
    "sundeweatherkeyfeature1": "Actualizaciones meteorológicas en tiempo real basadas en consultas del usuario",
    "sundeweatherkeyfeature2": "Mapa interactivo para información meteorológica basada en la ubicación",
    "sundeweatherkeyfeature3": "Diseño receptivo para una visualización óptima en todos los dispositivos",
    "sundeweatherkeyfeature4": "Geocodificación precisa usando la API de OpenCage",
    "website": "Sitio web",
    "todoclibio": "Una simple aplicación de lista de tareas en la CLI. La aplicación permite al usuario agregar, eliminar y listar tareas. Las tareas se almacenan en un archivo JSON, y la aplicación está construida usando el lenguaje de programación Rust. El programa también tiene una función motivacional que obtiene una cita aleatoria para ayudar al usuario en su camino para completar sus tareas diarias.",
    "todoclikeyfeature1": "Agregar, eliminar y listar tareas",
    "todoclikeyfeature2": "Almacenamiento en archivo JSON para tareas",
    "todoclikeyfeature3": "Citas motivacionales para el usuario",
    "sundeaibio": "Aplicación basada en consola para generar imágenes de IA basadas en una consulta de búsqueda de texto por el usuario. El proyecto usa una API de Stability AI y su motor para generar, pero maneja la interfaz de usuario y la solicitud enviada al generador.",
    "sundeaikeyfeature1": "Obtención de API de motor de imágenes de IA de vanguardia",
    "sundeaikeyfeature2": "Consultas personalizables para el usuario",
    "sundeaikeyfeature3": "Velocidades de generación rápidas",
    "rubyceasarbio": "Uno de mis primeros proyectos en Ruby. Es una aplicación basada en consola que funciona como una mini aplicación donde puedes agregar una cadena que luego se cifra usando el cifrado César. Desde el menú incorporado puedes ver el mensaje cifrado, o ver el mensaje descifrado que acabas de escribir. No está destinado a almacenar contraseñas y similares, solo es una aplicación divertida donde el usuario puede ver el cifrado por sí mismo.",
    "rubyceasarkeyfeature1": "Cifrado César",
    "rubyceasarkeyfeature2": "Entrada del usuario para cadenas personalizadas",
    "rubyceasarkeyfeature3": "Descifrado de la cadena cifrada",
    "havblikkbio": "Sitio web creado para un hotel ficticio en Noruega. El sitio web proporciona funcionalidad tanto para el personal del hotel como para los visitantes. Los usuarios pueden alquilar habitaciones, y el personal puede revisar las reservas entrantes. Este proyecto se creó debido a un proyecto escolar, utilizando React y Material UI para un diseño elegante y moderno.",
    "havblikkkeyfeature1": "Reservas de habitaciones y vista general de pedidos",
    "havblikkkeyfeature2": "Diseño moderno que muestra el hotel ficticio",
    "havblikkkeyfeature3": "Modelo 3D de la habitación del hotel",
    "havblikkkeyfeature4": "Autenticación de usuarios con Auth0",
    "catchtheballbio": "Pequeño minijuego creado como un proyecto de clase de matemáticas. Usa Pygame con Python para crear un juego simple donde el jugador tiene que atrapar la pelota con una paleta. El juego tiene un sistema de puntuación y un sistema de puntuaciones altas, y el jugador puede jugar hasta que pierda al alcanzar un mínimo o ganar si alcanza el máximo.",
    "catchtheballkeyfeature1": "Sistema de puntos con pantallas de ganar y perder",
    "catchtheballkeyfeature2": "Fondo y UI atractivos",
    "catchtheballkeyfeature3": "Controles fácilmente comprensibles",
    "emailtitle": "¡Envíame un correo electrónico!",
    "name": "Nombre",
    "email": "Correo electrónico",
    "message": "Mensaje",
    "send": "Enviar",
    "authtitle": "Autenticación en todas mis plataformas",
    "login": "Iniciar sesión",
    "logout": "Cerrar sesión"
}