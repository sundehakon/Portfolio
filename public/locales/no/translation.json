{
    "home": "Hjem",
    "contactheader": "Kontakt",
    "bio": "16 år gammel studentutvikler fra Oslo, Norge",
    "contact": "Kontakt meg",
    "skillset": "Ferdigheter",
    "about": "Om meg",
    "development": "Utvikling",
    "developmentbio": "Som de fleste utviklere, liker jeg å bruke ulike operativsystemer for prosjektutvikling. For øyeblikket bruker jeg en MacBook Pro og Visual Studio Code for det meste av arbeidet mitt. Jeg har også erfaring med Linux og Windows.",
    "myhistory": "Min Historie",
    "myhistorybio": "Jeg ble født 16. november 2007 i Oslo, Norge. Jeg har bodd i Lillestrøm det meste av livet mitt, en mellomstor by rett utenfor Oslo. Jeg begynte å programmere for noen år siden, påvirket av skolen og sosiale medier. Nå koder jeg hver dag for skolen!",
    "projects": "Prosjekter",
    "projectsbio": "Å bygge prosjekter er en av mine favorittmåter å lære å kode på. Gjennom årene har jeg laget værapplikasjoner ved hjelp av API-er, en hotellnettside, og en konsollbasert applikasjon for å generere AI-baserte bilder ved hjelp av Stability AI. Sjekk ut prosjektene mine!",
    "sundeweatherbio": "Nettside laget med React som bruker API-er fra Yr og OpenCage for å gi værdata til brukeren basert på en søkespørsmål. Nettsiden tilbyr også en interaktiv kartløsning hvor brukeren kan legge inn sin plassering på kartet, eller bruke sin egen og motta værdata for den plasseringen nesten umiddelbart.",
    "keyfeatures": "Nøkkelfunksjoner:",
    "sundeweatherkeyfeature1": "Sanntids væroppdateringer basert på brukerforespørsel",
    "sundeweatherkeyfeature2": "Interaktivt kart for værinformasjon basert på plassering",
    "sundeweatherkeyfeature3": "Responsivt design for optimal visning på alle enheter",
    "sundeweatherkeyfeature4": "Nøyaktig geokoding ved bruk av OpenCage API",
    "website": "Nettside",
    "todoclibio": "En enkel CLI todo-listeapplikasjon. Applikasjonen lar brukeren legge til, fjerne og liste opp oppgaver. Oppgavene lagres i en JSON-fil, og applikasjonen er bygget med Rust-programmeringsspråket. Programmet har også en motivasjonsfunksjon som henter et tilfeldig sitat for å hjelpe brukeren på veien til å fullføre dagens oppgaver.",
    "todoclikeyfeature1": "Legg til, fjern og list opp oppgaver",
    "todoclikeyfeature2": "JSON-fil lagring for oppgaver",
    "todoclikeyfeature3": "Motiverende sitater for brukeren",
    "sundeaibio": "Konsollbasert applikasjon for å generere AI-bilder basert på en tekstsøkespørsmål fra brukeren. Prosjektet bruker en Stability AI API, og deres motor for å generere, men håndterer UI og forespørselen sendt til generatoren.",
    "sundeaikeyfeature1": "API-henting fra toppmoderne AI-bildemotor",
    "sundeaikeyfeature2": "Tilpassbare forespørsel for brukeren",
    "sundeaikeyfeature3": "Rask genereringshastighet",
    "rubyceasarbio": "Et av mine første Ruby-prosjekter. Det er en konsollbasert applikasjon som fungerer som en mini-app hvor du kan legge til en streng som deretter krypteres ved hjelp av caesar-sifferet. Fra den innebygde menyen kan du se den krypterte meldingen, eller se den dekrypterte meldingen du nettopp skrev inn. Det er ikke ment å lagre passord og lignende, bare en morsom applikasjon hvor brukeren kan se krypteringen selv.",
    "rubyceasarkeyfeature1": "Caesar-siffer kryptering",
    "rubyceasarkeyfeature2": "Brukerinndata for tilpassede strenger",
    "rubyceasarkeyfeature3": "Dekryptering av den krypterte strengen",
    "havblikkbio": "Nettside laget for et fiktivt hotell i Norge. Nettsiden gir funksjonalitet både for personalet på hotellet og for besøkende. Brukere kan leie rom, og personalet kan sjekke innkommende reservasjoner. Dette prosjektet ble laget på grunn av et skoleprosjekt, ved å bruke React og Material UI for et stilrent og moderne design.",
    "havblikkkeyfeature1": "Romreservasjoner og oversikt over bestillinger",
    "havblikkkeyfeature2": "Moderne design som viser det fiktive hotellet",
    "havblikkkeyfeature3": "3D-modell av hotellrom",
    "havblikkkeyfeature4": "Brukerautentisering med Auth0",
    "catchtheballbio": "Lite minispill som ble laget som et matematikkprosjekt. Det bruker Pygame med Python for å lage et enkelt spill hvor spilleren må fange ballen med en paddle. Spillet har et poengsystem og et høy poengsystem, og spilleren kan spille til de taper ved å nå et minimum, eller vinne hvis de treffer maksimum.",
    "catchtheballkeyfeature1": "Poengsystem med vinn og tap skjermer",
    "catchtheballkeyfeature2": "Engasjerende bakgrunn og UI",
    "catchtheballkeyfeature3": "Enkelt forståelige kontroller",
    "emailtitle": "Send meg en e-post!",
    "name": "Navn",
    "email": "E-post",
    "message": "Melding",
    "send": "Send",
    "authtitle": "Autentisering",
    "login": "Logg inn",
    "logout": "Logg ut"
}