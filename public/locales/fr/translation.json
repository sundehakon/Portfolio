{
    "home": "Accueil",
    "contactheader": "Contact",
    "bio": "Développeur étudiant de 16 ans d'Oslo, Norvège",
    "contact": "Contactez-moi",
    "skillset": "Compétences",
    "about": "À propos",
    "development": "Développement",
    "developmentbio": "Comme la plupart des développeurs, j'aime utiliser divers systèmes d'exploitation pour développer des projets. Actuellement, j'utilise un MacBook Pro et Visual Studio Code pour la plupart de mes travaux. J'ai également de l'expérience avec Linux et Windows.",
    "myhistory": "Mon Histoire",
    "myhistorybio": "Je suis né le 16 novembre 2007 à Oslo, Norvège. J'ai vécu la plupart de ma vie à Lillestrøm, une ville de taille moyenne juste à l'extérieur d'Oslo. J'ai commencé à programmer il y a quelques années, influencé par l'école et les réseaux sociaux. Maintenant, je code tous les jours pour l'école !",
    "projects": "Projets",
    "projectsbio": "Créer des projets est l'un de mes moyens préférés pour apprendre à coder. Au fil des ans, j'ai créé des applications météo utilisant des API, une page web pour un hôtel, et une application console pour générer des images basées sur l'IA avec Stability AI. Découvrez mes projets !",
    "sundeweatherbio": "Site Web créé avec React qui utilise les API de Yr et OpenCage pour fournir des données météorologiques à l'utilisateur en fonction d'une requête de recherche. Le site propose également une solution de carte interactive où l'utilisateur peut entrer sa position sur la carte ou utiliser la sienne et recevoir les données météorologiques presque immédiatement.",
    "keyfeatures": "Fonctionnalités principales :",
    "sundeweatherkeyfeature1": "Mises à jour météorologiques en temps réel basées sur les requêtes des utilisateurs",
    "sundeweatherkeyfeature2": "Carte interactive pour les informations météorologiques basées sur la localisation",
    "sundeweatherkeyfeature3": "Conception responsive pour un affichage optimal sur tous les appareils",
    "sundeweatherkeyfeature4": "Géocodage précis à l'aide de l'API OpenCage",
    "website": "Site web",
    "todoclibio": "Une simple application todo en ligne de commande. L'application permet à l'utilisateur d'ajouter, de supprimer et de lister des tâches. Les tâches sont stockées dans un fichier JSON, et l'application est construite avec le langage Rust. Le programme propose également une fonctionnalité motivationnelle qui récupère une citation aléatoire pour aider l'utilisateur à terminer ses corvées quotidiennes.",
    "todoclibkeyfeature1": "Ajout, suppression et liste des tâches",
    "todoclibkeyfeature2": "Stockage des tâches dans un fichier JSON",
    "todoclibkeyfeature3": "Citations motivantes pour l'utilisateur",
    "sundeaibio": "Application console pour générer des images IA basées sur une requête textuelle de l'utilisateur. Le projet utilise l'API Stability AI et leur moteur pour la génération, mais gère l'interface utilisateur et la requête envoyée au générateur.",
    "sundeaikeyfeature1": "Récupération via API de moteur d'image IA de pointe",
    "sundeaikeyfeature2": "Requêtes personnalisables pour l'utilisateur",
    "sundeaikeyfeature3": "Vitesses de génération rapides",
    "rubyceasarbio": "L'un de mes premiers projets en Ruby. Il s'agit d'une application console qui fonctionne comme une mini-app où vous pouvez ajouter une chaîne qui est ensuite chiffrée à l'aide du chiffrement César. Depuis le menu intégré, vous pouvez voir le message chiffré ou visualiser le message déchiffré que vous venez de saisir. Ce n'est pas destiné à stocker des mots de passe, mais juste une application amusante pour que l'utilisateur voie le chiffrement.",
    "rubyceasarkeyfeature1": "Chiffrement par chiffrement de César",
    "rubyceasarkeyfeature2": "Entrée utilisateur pour des chaînes personnalisées",
    "rubyceasarkeyfeature3": "Déchiffrement de la chaîne chiffrée",
    "havblikkbio": "Site Web créé pour un hôtel fictif en Norvège. Le site propose des fonctionnalités pour le personnel de l'hôtel et les visiteurs. Les utilisateurs peuvent réserver des chambres, et le personnel peut vérifier les réservations entrantes. Ce projet a été créé dans le cadre d'un projet scolaire, en utilisant React et Material UI pour un design moderne et élégant.",
    "havblikkkeyfeature1": "Réservation de chambres et vue d'ensemble des commandes",
    "havblikkkeyfeature2": "Design moderne mettant en valeur l'hôtel fictif",
    "havblikkkeyfeature3": "Modèle 3D de la chambre d'hôtel",
    "havblikkkeyfeature4": "Authentification des utilisateurs avec Auth0",
    "catchtheballbio": "Petit mini-jeu créé dans le cadre d'un projet de mathématiques. Il utilise Pygame avec Python pour créer un jeu simple où le joueur doit attraper la balle avec une raquette. Le jeu a un système de score et un système de meilleurs scores, et le joueur peut jouer jusqu'à perdre ou gagner en atteignant un maximum de points.",
    "catchtheballkeyfeature1": "Système de points avec écrans de victoire et de défaite",
    "catchtheballkeyfeature2": "Interface utilisateur et arrière-plan engageants",
    "catchtheballkeyfeature3": "Commandes faciles à comprendre",
    "emailtitle": "Envoyez-moi un e-mail !",
    "name": "Nom",
    "email": "Email",
    "message": "Message",
    "send": "Envoyer",
    "authtitle": "Authentification sur toutes mes plateformes",
    "login": "Connexion",
    "logout": "Déconnexion"
}